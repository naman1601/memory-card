{"version":3,"sources":["pokemonData.js","Cards.js","Header.js","App.js","index.js"],"names":["getPokemon","numCards","randomIDs","i","randomID","Math","floor","random","includes","push","getRandomIDs","Promise","all","map","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","id","response","data","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","text","name","img","sprites","front_default","stop","_x","apply","this","arguments","Cards","props","_useState","useState","_useState2","slicedToArray","clickedCards","setClickedCards","_useState3","_useState4","pokemonCards","setPokemonCards","fetchPokemon","Cards_regeneratorRuntime","pokemon","checkForPoint","e","Number","target","closest","checkBestscore","length","resetScore","toConsumableArray","increaseScore","temporaryPokemonCards","j","_ref2","shuffle","useEffect","react_default","a","createElement","style","margin","width","display","flexWrap","justifyContent","cursor","item","onClick","console","log","borderRadius","background","key","className","height","alt","src","textAlign","fontSize","Header","position","top","right","left","padding","color","backgroundImage","flexDirection","maxScore","bestScore","scoreboard","App","setScoreboard","setBestScore","src_Cards","v","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8f1ee3b1.chunk.js","sourcesContent":["export const getRandomIDs = (numCards) => {\n  // returns numCards random distinct numbers between 1 and 151 (inclusive)\n  const randomIDs = [];\n\n  for (let i = 0; i < numCards; i++) {\n    let randomID = Math.floor(Math.random() * 151) + 1;\n    while (randomIDs.includes(randomID)) {\n      randomID = Math.floor(Math.random() * 151) + 1;\n    }\n    randomIDs.push(randomID);\n  }\n\n  return randomIDs;\n};\n\nexport const getPokemon = (numCards) => {\n  const randomIDs = getRandomIDs(numCards);\n  const pokemon = Promise.all(\n    randomIDs.map(async (id) => {\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n      const data = await response.json();\n\n      return {\n        id,\n        text: data.name,\n        img: data.sprites.front_default,\n      };\n    })\n  );\n\n  return pokemon;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { getPokemon } from \"./pokemonData\";\n\nconst Cards = (props) => {\n  const [clickedCards, setClickedCards] = useState([]);\n  const [pokemonCards, setPokemonCards] = useState([]);\n\n  const fetchPokemon = async (numCards) => {\n    const pokemon = await getPokemon(numCards);\n    setPokemonCards(pokemon);\n  };\n\n  useEffect(() => {\n    fetchPokemon(props.numCards);\n  }, []);\n\n  function shuffle() {\n    let temporaryPokemonCards = [...pokemonCards];\n\n    for (let i = temporaryPokemonCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [temporaryPokemonCards[i], temporaryPokemonCards[j]] = [\n        temporaryPokemonCards[j],\n        temporaryPokemonCards[i],\n      ];\n    }\n\n    setPokemonCards(temporaryPokemonCards);\n  }\n\n  function checkForPoint(e) {\n    if (!clickedCards.includes(Number(e.target.closest(\".card\").id))) {\n      setClickedCards((clickedCards) => [\n        ...clickedCards,\n        Number(e.target.closest(\".card\").id),\n      ]);\n      props.increaseScore();\n    } else {\n      props.checkBestscore(clickedCards.length);\n      props.resetScore();\n      setClickedCards([]);\n    }\n\n    shuffle();\n  }\n\n  return (\n    <div\n      style={{\n        margin: \"170px auto auto \",\n        width: \"90%\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        cursor: \"pointer\",\n      }}\n    >\n      {pokemonCards.map((item) => {\n        return (\n          <div\n            onClick={(e) => {\n              checkForPoint(e);\n              console.log(clickedCards);\n            }}\n            style={{\n              margin: \"10px\",\n              borderRadius: \"5px\",\n              background: \"white\",\n            }}\n            key={item.id}\n            id={item.id}\n            className=\"card\"\n          >\n            <img\n              style={{\n                width: \"230px\",\n                height: \"200px\",\n                borderRadius: \"5px 5px 0 0\",\n              }}\n              alt={item.text}\n              src={item.img}\n            ></img>\n            <p style={{ textAlign: \"center\", fontSize: \"20px\" }}>{item.text}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\n\nexport function Header(props) {\n  return (\n    <header\n      style={{\n        position: \"fixed\",\n        top: \"0\",\n        right: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        padding: \"10px\",\n        color: \"white\",\n        backgroundImage: `url('https://wallpaperaccess.com/full/1429585.jpg')`,\n      }}\n    >\n      <img\n        className=\"App-logo\"\n        style={{ borderRadius: \"5px\", width: \"150px\", height: \"150px\" }}\n        alt=\"icon\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Pok%C3%A9_Ball_icon.svg/1026px-Pok%C3%A9_Ball_icon.svg.png\"\n      ></img>\n      <div>\n        <h1>PokeMon Memory Card Game</h1>\n        <p>\n          Get points by clicking on an image but don't click on any more than\n          once!\n        </p>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          background: \"white\",\n          color: \"black\",\n          width: \"180px\",\n          height: \"150px\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <p>Max Score: {props.maxScore}</p>\n        <p>Best Score: {props.bestScore}</p>\n        <p>Current Score: {props.scoreboard}</p>\n      </div>\n    </header>\n  );\n}\n","import React, { useState } from \"react\";\nimport Cards from \"./Cards\";\nimport \"./App.css\";\nimport { Header } from \"./Header\";\n\nconst App = () => {\n  const [scoreboard, setScoreboard] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const maxScore = 30;\n\n  const increaseScore = () => {\n    setScoreboard(scoreboard + 1);\n  };\n  const checkBestscore = (v) => {\n    if (bestScore < v) {\n      setBestScore(v);\n    }\n  };\n  const resetScore = () => {\n    setScoreboard(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        bestScore={bestScore}\n        maxScore={maxScore}\n        scoreboard={scoreboard}\n      />\n      <Cards\n        numCards={maxScore}\n        increaseScore={increaseScore}\n        checkBestscore={checkBestscore}\n        setScoreboard={setScoreboard}\n        resetScore={resetScore}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}